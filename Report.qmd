---
title: "Report"
author: "Justin Powley"
format: html
editor: visual
---

```{r, init, message = F, warning = F, error = F}
library(tidyquant)
library(tidyverse)
library(RTL)
library(tsibble)
library(feasts)
library(slider)
library(httr)
library(curl)

# Note the lack of an API sometimes necessitates loading from excel worksheets.
library(xlsx)

EIA_API <- "UKCNbCB0m8aixfPBshQU3Jdlz2uZsEbG2HebvhHX"
```

```{r, data_import}
# Yahoo Finance
tickers <- c("RB=F", "HO=F", "CL=F", "NG=F")
start_date <- '2021-01-01'
price_data_in <- tq_get(tickers, get = "stock.prices", from = start_date) %>% 
  dplyr::mutate(symbol = case_when(symbol == tickers[1] ~ "RBOB",
                                   symbol == tickers[2] ~ "Heating_Oil",
                                   symbol == tickers[3] ~ "WTI",
                                   symbol == tickers[4] ~ "Natural_Gas"))

eia_tickers <- tribble(~ticker, ~name, "PET.WTTSTUS1.W", "US_Crude_Inventory",
                       "PET.MCRFPUS1.M", "US_Crude_Prod",
                       "NG.NW2_EPG0_SWO_R48_BCF.W", "Lower48NGStorage",
                       "PET.WCRNTUS2.W", "US_Crude_NI",
                       "PET.WRPNTUS2.W", "US_Petrol_Products_NI",
                       "PET.WGFRPUS2.W", "US_Gasoline_Production",
                       "PET.MGFSTUS1.M", "US_Gasoline_Stocks_Blended",
                       "PET.M_EPOBGRR_SAE_NUS_MBBL.M", "US_RBOB_Stocks_Unblended",
                       "PET.MO5ST_NUS_1.M", "US_Conventional_Stocks_Unblended",
                       "PET.WPULEUS3.W", "Pct_Operable_Utilization"
                       )

EIA_Data <- eia2tidy_all(eia_tickers, EIA_API)
EIA_Data %>% group_by(series) %>% dplyr::mutate(temp = 1, temp = cumsum(temp)) %>% 
  dplyr::filter(temp == 1) %>% 
  dplyr::select(-temp)

fred_tickers <- c("IPMINE")
fred_data <- tq_get(fred_tickers, get = "economic.data", from = start_date) %>% 
  dplyr::mutate(symbol = case_when(symbol == fred_tickers[1] ~ "Mining Production Index"))
```

```{r, preprocessing}
add_ret_metrics <- function(df_in){
  # Accepts a df with columns value, series, date
  # Adds returns and cumulative return metrics for value.
  df_in %>% 
    group_by(series) %>% 
    arrange(series, date) %>% 
    dplyr::mutate(ret_pct = (value-lag(value))/lag(value),
                  ret_log = log(value/lag(value))) %>% 
    tidyr::drop_na() %>% 
    dplyr::mutate(cret_pct = cumprod(ret_pct+1),
                  cret_log = cumsum(ret_log),
                  year_month = yearmonth(date)) %>% 
    return()
}

price_data <- price_data_in %>% 
  dplyr::select(date, series = symbol, value = close, volume)
# rm(price_data_in)

fundamentals_data <- EIA_Data %>% 
  add_ret_metrics()
# rm(EIA_Data)

# 3:2:1 Crack Spread used here. Setting below can be used to adjust the crack spread to other ratios, such as 5:3:2
spread_ratio <- c(3,2,1)

spread_data <- price_data %>% 
  pivot_wider(names_from = series, id_cols = date, values_from = value) %>% 
  dplyr::mutate(crack_spread = ((spread_ratio[2]*42*RBOB + 
                                spread_ratio[3]*42*Heating_Oil) - 
                                WTI*spread_ratio[1])/
                                spread_ratio[1])

price_data <- spread_data %>% dplyr::select(date, value = crack_spread) %>% 
  dplyr::mutate(series = "crack_spread", volume = 0) %>% 
  bind_rows(price_data) %>% 
  add_ret_metrics()


EIA_Data %>% pivot_wider(names_from = series, id_cols = date, values_from = value) %>% 
  dplyr::arrange(desc(date))
```

```{r, eda}
# Rolling Correlation of RBOB and WTI
spread_data %>% 
  dplyr::mutate(static_cor = cor(WTI,RBOB),
                cor20 = slide2_dbl(RBOB, WTI, cor, .before = 20, .complete = TRUE),
                cor50 = slide2_dbl(RBOB, WTI, cor, .before = 50, .complete = TRUE),
                cor200 = slide2_dbl(RBOB, WTI, cor, .before = 200, .complete = TRUE)
                ) %>% 
  tidyr::drop_na() %>% 
  ggplot() +
  geom_line(aes(x=date, y = cor20, color = "20-Day Corr")) +
  geom_line(aes(x=date, y = cor50, color = "50-Day Corr")) +
  geom_line(aes(x=date, y = cor200, color = "200-Day Corr")) +
  geom_line(aes(x = date, y = static_cor, color = "Static Corr, Full Horizon")) +
  labs(title = "Rolling Correlations, WTI and RBOB",
       subtitle = "How coupled are spreads to the underlying price?",
       x = "Date",
       y = "Correlation",
       color = "Legend") +
  scale_color_manual(values = c("20-Day Corr" = "red", "50-Day Corr" = "blue", "200-Day Corr" = "green", "Static Corr, Full Horizon" = "black"))

# Natural Gas and Spread Price
spread_data %>% 
  ggplot() +
  geom_line(aes(x = date, y = crack_spread), color = "red") +
  geom_line(aes(x = date, y = Natural_Gas), color = "black")

# Crude Stocks
fundamentals_data %>% 
  dplyr::filter(series == "US_Crude_Inventory" & date > start_date) %>% 
  ggplot() +
  geom_line(aes(x = date, y = value)) +
  labs(title = "US Crude Stocks", y = "Thousands of Barrels", x = "Date")

# Crude Stocks, PCT Change
fundamentals_data %>% 
  dplyr::filter(series == "US_Crude_Inventory" & date > start_date) %>% 
  ggplot() +
  geom_line(aes(x = date, y = ret_pct)) +
  labs(title = "US Crude Stocks, Changes in Supply", y = "% Change in Supply", x = "Date")

# Plant Utilization versus Crude Inventories
fundamentals_data %>% 
  pivot_wider(names_from = series, id_cols = date, values_from = value) %>% 
  dplyr::select(Pct_Operable_Utilization, US_Crude_Inventory) %>% 
  tidyr::drop_na() %>% 
  cor()

# This graph reveals short term supply/demand shocks as well as a general inflationary pressure which leads to a gradual increase over the course of the time period.
price_data %>% 
  dplyr::filter(series == "RBOB") %>% 
  ggplot() +
  geom_line(aes(x = date, y = value))
```

```{r, Risk}
price_data %>% 
  dplyr::filter(series == "crack_spread" | series == "RBOB" | series == "WTI" | series == "Heating_Oil") %>% 
  dplyr::mutate(series = case_when(series == "crack_spread" ~ "Crack Spread",
                                   series == "RBOB" ~ "RBOB",
                                   series == "WTI" ~ "WTI",
                                   TRUE ~ "Heating Oil")) %>% 
  ggplot() +
  geom_histogram(aes(x = ret_pct, y = ..count../sum(..count..)), bins = 100) +
  labs(x = "Percent Return, Daily", y = "Density", title = "Crack Spread Volatility Compared to its Market Dependencies") +
  facet_grid(series~.)

price_data %>% 
  dplyr::filter(series == "crack_spread" | series == "RBOB") %>% 
  dplyr::mutate(series = case_when(series == "crack_spread" ~ "Crack Spread",
                                   series == "RBOB" ~ "RBOB",
                                   series == "WTI" ~ "WTI",
                                   TRUE ~ "Heating Oil")) %>% 
  ggplot() +
  geom_histogram(aes(x = ret_pct, y = ..count../sum(..count..)), bins = 100) +
  labs(x = "Percent Return, Daily", y = "Density", title = "Crack Spread Versus Gasoline Volatility") +
  facet_grid(series~.)

# price_data %>% pivot_wider(id_cols = date, names_from = series, values_from = value) %>% 

price_data %>% 
  group_by(series) %>% 
  dplyr::summarise(
    `Average Return` = mean(ret_pct),
    `Standard Deviation` = sd(ret_pct),
    .groups = "keep")
```

```{r, FHWA}
# Pulling distance traveled estimates from FHWA
# https://www.fhwa.dot.gov/policyinformation/travel_monitoring/tvt.cfm
# Potential to create a fully automated workflow. For now, manually link the reports for the time period of interest.

# Must be newest to oldest
links <- c(FHWA2024 = "https://www.fhwa.dot.gov/policyinformation/travel_monitoring/24juntvt/24juntvt.xlsx",
           FHWA2023 = "https://www.fhwa.dot.gov/policyinformation/travel_monitoring/23dectvt/23dectvt.xlsx",
           FHWA2022 = "https://www.fhwa.dot.gov/policyinformation/travel_monitoring/22dectvt/22dectvt.xlsx",
           FHWA2021 = "https://www.fhwa.dot.gov/policyinformation/travel_monitoring/21dectvt/21dectvt.xlsx")

month_tags <- c("JAN", "FEB", "MAR", "APR", "MAY", "JUN", "JUL", "AUG", "SEP", "OCT", "NOV", "DEC")

clean_FHWA <- function(df_in){
  
  df_in_year <- paste(df_in %>% head(1), collapse = " ") %>% str_extract(pattern = "[0-9][0-9][0-9][0-9]")
  
  df_in %>% 
    tail(1) %>% 
    pivot_longer(names_to = "month", cols = month_tags) %>% 
    dplyr::select(month, value) %>% 
    dplyr::mutate(year = df_in_year) %>% 
    drop_na() %>% 
    return()
}

for(i in 1:length(links)){
  path <- paste0(names(links)[i],".xlsx")
  curl_download(links[i], path)
# I am hesitant to use specific row indexes here, due to issues which can arise if the template changes. I'll add a check to make sure the row title is consistent to catch potential changes to the template.
  df1 <- xlsx::read.xlsx(path, sheetName = "Page 3", rowIndex = c(3,4,12))
  df2 <- xlsx::read.xlsx(path, sheetName = "Page 3", rowIndex = c(3,13,20))

  if(i == 1){
    FHWA_Data <- df2 %>% clean_FHWA()
  }
  FHWA_Data <- bind_rows(df1 %>% clean_FHWA(), FHWA_Data)
}

FHWA_Data <- FHWA_Data %>% 
  dplyr::mutate(date = yearmonth(paste(month, year)),
                series = "B_Miles_Driven") %>% 
  dplyr::select(series, date, value) %>% 
  dplyr::mutate(date = as.Date(date),
                value = as.numeric(value))
  
# This uncovers for us some of the seasonal demand for fuel.
FHWA_Data %>% 
  arrange(date) %>% 
  ggplot() +
  geom_line(aes(x = date, y = value)) +
  labs(title = "Seasonal patterns in road travel, using FHWA Data",
       x = "Date", y = "Billions of Miles Traveled")
```

```{r}

```

## Recommendation



## Rationale



## Fundamental Market Drivers

## Risk

Crack spread is more volatile than risk for a couple of reasons. Firstly, the crack spread is affected by 3 separate prices -- crude, gasoline and distillates. Secondly, the spread between the prices is nominally smaller than the prices themselves. Combined, this means an uncorrelated move in any of the 3 prices will often result in a proportionally larger move in the spread. This makes the spread more risky. This can be seen by comparing gasoline prices the crack spread prices below:

```{r}
#Graph Goes Here
```



## Appendix



### Development Notes

```{r, Developer Notes}
# A place for the developer to note potential features and future directions to take the model.

# Can today's crack spread be used to predict tomorrows crude price? Perhaps is the crack spread is favorable enough we can expect a bullish run on crude as companies seek to increase production to capitalize on higher margins.

# Note the move to v2 API call on EIA
```